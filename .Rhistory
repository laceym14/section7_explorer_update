setwd("C:/Users/mlacey/CCI-site")
setwd("C:/Users/mlacey/CCI-site")
setwd("C:/Users/mlacey/recovery_plans_dash")
setwd("C:/Users/mlacey/CCI-site")
setwd("C:/Users/mlacey/ESA_listings_dash")
setwd("C:/Users/mlacey/CCI-site")
setwd("C:/Users/mlacey/ESA_listings_dash")
shiny::runApp('C:/Users/mlacey/section7_explorer')
setwd("C:/Users/mlacey/state-ESAs")
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(rio)
install.packages(rio)
"rio"
install.packages("rio")
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(rio)
library(DT)
library(flexdashboard)
library(plotly)
library(shiny)
wide <- readRDS("states_es_laws.rds")
dat <- readRDS("states_es_laws_tall.rds")
key <- readRDS("states_es_laws_key_tall.rds")
fluidRow(
column(
5,
p(style="font-size: 1.7em; font-weight: bold; margin-bottom: 0",
"State Endangered Species Laws"),
p(style="width:90%; font-size: 1.4rem; margin-bottom: 0",
"The strength of state laws protecting endangered species varies widely.")
),
column(2),
column(
5,
selectInput(
inputId = "component",
label = "Scores (select 1 or more ESA element)",
choices = c("Statute" = "statute",
"Plant & animal coverage" = "plant_animal_cov",
"Taxonomic level coverage" = "taxonomic_level_cov",
"Evidence" = "evidence",
"Citizen petition" = "citizen_petition",
"Recovery" = "recovery",
"Conserv. programs" = "conserv_programs",
"Critical habitat" = "critical_habitat",
"Private land use restrictions" = "private_land_restrictions",
"Substantive restrictions" = "substantive_restrictions",
"Consultation" = "consultation",
"Animal commerce restrictions" = "animal_commerce_restrictions",
"Animal take restrictions" = "animal_take_restrictions",
"Habitat modification is take" = "habitat_mod_take",
"Plant commerce restrictions" = "plant_commerce_restrictions",
"Plant take restrictions" = "plant_take_restrictions"),
selected = c("statute", "recovery"),
multiple = TRUE,
width = "100%"
)
)
)
cur_z <- reactive({
d2 <- filter(dat, variable %in% input$component)
if(dim(d2)[1] > 0) {
cur_tot <- aggregate(d2$value ~ d2$code, FUN = sum, na.rm = TRUE)
names(cur_tot) <- c("code", "value")
} else {
cur_tot <- data_frame(code=c(NA), value=c(NA))
}
cur_tot <- left_join(cur_tot, d2, by = "code")
names(cur_tot)[2] <- "value"
cur_tot
})
g <- list(
scope = 'usa',
projection = list(type = 'lambert usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
renderPlotly({
hover <- cur_z()$state
plot_geo(cur_z(), locationmode = 'USA-states') %>%
add_trace(
type = "choropleth",
z = cur_z()$value,
text = hover,
locations = ~code,
# color = ~cur_z(),
colors = "YlGnBu"
) %>%
colorbar(title = "Score") %>%
layout(
margin=list(r=100, l=20, t=20, b=100),
geo = g
)
})
renderPlotly({
cur_rank <- rank(-cur_z()$value)
state <- reorder(cur_z()$state, -cur_rank)
score <- cur_z()$value
data <- data_frame(state=state, score=score, rank=cur_rank)
plot_ly(
data,
x = data$score,
y = data$state,
hover = cur_z()$state,
marker = list(color = "#094789"),
type = "bar",
orientation = "h"
) %>%
layout(
margin = list(l = 100, t = 30, b = 30),
yaxis = list(tickfont = list(size = 10))
)
})
renderDataTable({
names(wide) <- c("state", "statute", "plant & animal coverage",
"taxonomic level coverage", "evidence", "citizen petition?",
"recovery", "conserv. programs", "critical habitat",
"private land use restrictions", "substantive restrictions",
"consultation", "animal commerce restrictions",
"animal take restrictions", "habitat modification is take?",
"plant commerce restrictions", "plant take restrictions",
"total", "citations", "notes", "code", "rank")
DT::datatable(
wide,
extensions = c("Buttons"),
options = list(
rownames = FALSE,
pageLength = 50,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel')
)
)
})
key$variable <- gsub(key$variable, pattern = "_", replacement = " ")
names(key)[1] <- "ESA element"
knitr::kable(key)
